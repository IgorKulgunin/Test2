
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//{{Начало доработки
	// Добавление элементов на форму
	КИР_ОбработкаФормыДокументов.КИР_ДоработкаФормы(ЭтотОбъект); 
	//КонецДоработки}}
	
		// {{Начало доработки 
	//Добавление ГруппаРасчетСкидки на форму
	ГруппаРасчетСкидки = Элементы.Добавить("ГруппаРасчетСкидки",Тип("ГруппаФормы"),Элементы.ГруппаШапкаЛево);
	ГруппаРасчетСкидки.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаРасчетСкидки.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаРасчетСкидки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда; 
	
	//Добавление поля СогласованнаяСкидка на форму
	ПолеСогласованнаяСкидка = Элементы.Добавить("СогласованнаяСкидка",Тип("ПолеФормы"),Элементы.ГруппаРасчетСкидки);
	ПолеСогласованнаяСкидка.ПутьКДанным = "Объект.КИР_СогласованнаяСкидка"; 
	ПолеСогласованнаяСкидка.Вид = ВидПоляФормы.ПолеВвода;
	ПолеСогласованнаяСкидка.Заголовок ="Согласованная скидка";
	ПолеСогласованнаяСкидка.УстановитьДействие("ПриИзменении", "КИР_СогласованнаяСкидкаПриИзменении"); 
	
	//Добавление команды и кнопки ПересчитатьСкидку
	КомандаПересчитатьСкидку = Команды.Добавить("ПересчитатьСкидку");
	КомандаПересчитатьСкидку.Заголовок = "Пересчитать Скидку";
	КомандаПересчитатьСкидку.Действие = "ПересчитатьСкидкуКоманда";
	
	КнопкаПересчитатьСкидку = Элементы.Добавить("ПересчитатьСкидку",Тип("КнопкаФормы"),Элементы.ГруппаРасчетСкидки);
	КнопкаПересчитатьСкидку.ИмяКоманды = "ПересчитатьСкидку";
	//Конец доработки}}
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	//{{Начало доработки
	//Код из Конфигурации поставщика
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
		ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * (1-Объект.КИР_СогласованнаяСкидка/100);
		РассчитатьСуммуДокумента();
	// Конец доработки}}
	
КонецПроцедуры

&НаКлиенте 
Процедура ПересчитатьСкидкуКоманда(Команда)
	//{{Начало доработки
	РасчетСуммыСоСкидкой();
	//Конец доработки}} 
КонецПроцедуры


&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте 
Асинх Процедура КИР_СогласованнаяСкидкаПриИзменении(Элемент)
	//{{Начало доработки 
	Если Объект.КИР_СогласованнаяСкидка > 100 Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Скидка не может превышать 100%";
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Изменен процент скидки, пересчитать таблицы товаров и услуг?'");
	Результат = Ждать ВопросАсинх(ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	
	Если Результат = КодВозвратаДиалога.Нет Тогда 
		Возврат;
	КонецЕсли;
	
	РасчетСуммыСоСкидкой() 
	//Конец доработки}} 
КонецПроцедуры  

&НаКлиенте
Процедура РасчетСуммыСоСкидкой()
	//{{Начало доработки
	РассчитатьСуммуТовары();
	РассчитатьСуммуУслуги();
	//Конец доработки}} 
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуТовары()
	Для Каждого Строка Из Объект.Товары Цикл 
		Строка.Сумма = Строка.Цена * Строка.Количество * (1-Объект.КИР_СогласованнаяСкидка/100);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуУслуги()
	
	Для Каждого Строка Из Объект.Услуги Цикл 
		Строка.Сумма = Строка.Цена * Строка.Количество * (1-Объект.КИР_СогласованнаяСкидка/100);
	КонецЦикла;  
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
